#!/usr/bin/env sh
#
# wm independent hotkeys
#

# show help on key bindings
super + F1
  ~/.config/sxhkd/help.sh

# terminal emulator
alt + shift+ t
	kitty

# program launcher
alt + @space
  rofi -modi "run,drun" -show drun -display-run 'ﰌ' -display-drun 'ﰌ' -terminal kitty 

# window switcher
# alt + Tab
  # ~/.config/rofi/scripts/rofi.sh -m alttab

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# lockscreen
alt + shift + x
	xautolock -locknow
	xset dpms force off

# change backlight {add,subtract}
{XF86MonBrightnessUp,XF86MonBrightnessDown}
  $HOME/.config/sxhkd/light.sh {-A 5, -U 5}

# change volume {add, subtract}
{XF86AudioRaiseVolume,XF86AudioLowerVolume}
	pactl set-sink-mute 0 false ; pactl set-sink-volume 0 {+5%, -5%}

# instant mute
XF86AudioMute
	pactl set-sink-mute 0 true

# quick launcher
alt + x + c
  $HOME/.config/rofi/bin/apps.sh

# Screenshot whole screen
alt + s
  scrot ~/Pictures/Screenshots/'%Y-%m-%d_%H%M%S_$a.png' && dunstify "Screenshot taken"

# Screenshot selection
alt + shift + s
  sleep 0.2 ; scrot -s ~/Pictures/Screenshots/'%Y-%m-%d_%H%M%S_$a.png' && dunstify "Screenshot taken"

# Emacs
alt + e
  emacsclient -c

# Emacs Anywhere
alt + shift + e
  ~/.emacs_anywhere/bin/run

# Org Capture
alt + c
  emacsclient -n -e '(yequake-toggle "org-roam-capture")'

# Org Roam
alt + shift + c
  emacsclient -n -e '(yequake-toggle "org-roam-find")'

#
# bspwm hotkeys
#

# powermenu/restart bspwm
super + alt + {q,r}
	{$HOME/.config/rofi/bin/powermenu.sh,bspc wm -r}

# close and kill
alt + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
alt + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
alt + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
alt + g
	bspc node -s biggest

# Make split ratios equal
super + equal
 bspc node @/ --equalize

# Make split ratios balanced
super + minus
 bspc node @/ --balance

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

alt + r
  bspc node @/ -R 90

# hide window
super + v
  bspc node -g hidden

# unhide window
super + shift + v
  bspc node {,$(bspc query -N -n .hidden | head -n1)} -g hidden=off

